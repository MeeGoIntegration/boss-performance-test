BOSS Performance Test

===================== Note =====================================

* Don't run multiple test instances at same time since they all use
  same AMQP configuration


===================== Test Method ==============================

* The basic method in this test project is to simulate boss using
  in real world - running as a service for long time and dealing 
  with multiple requests from multiple users continually; Then observe the 
  performance data to get the evaluation

* Concept "load" and "iteration":
  * load: how many requests(workflows) sending to engine at same time
  * iteration: one iteration begins at sending specific number of 
    load workflows to engine, ends at engine finishing all received
    workflows   

* In each test case, specific load will be sent to engine iteratively
  for specific iterations

* Following processes will be created during each test case:
  * participants: participants processes; communicating with engine by AMQP
  * atop: running "atop" to record cpu/memory/disk data during testing

* We're trying to make our test suite more configurable with help from two
  kinds of config files:
  * "spec_config.rb": contains some detail info such as AMQP, atop options...
    See following sections for when/how to modify it


===================== Code Structure ==========================

This project is structured as follows:
	.
	|-- INSTALL
	|-- README
	|-- scripts
	|   |-- analyze_load.sh
	|   |-- pilot.py
	|   `-- workflows
	|       `-- workflow_simple.config
	|-- spec_config.rb 			# config file
	|-- spec_helper.rb	
	|-- test-bigload_spec.rb 	# test suite to test big load
	|-- test-demo_spec.rb		# demo test spec
	`-- test-longtime_spec.rb	# test suite to run long time testing


===================== How to Run ================================

1. Change to the test directory
2. Specify your test suite config file in "spec_config.rb"(refer to
   following "How to add new test case" section)
3. Issue "spec test-demo_spec.rb"
4. After finish, check results(home as default)


===================== Test Results ==============================

* Test results are located in your home direcotory as default;
  you can also change it by modify "spec_config.rb"

* Test results are structured as follows:
    ~/results
	  |-- case_001.log	# test results, find "rate" data here
	  |-- cpu.load		# cpu load
	  |-- dsk.load		# disk load
	  `-- mem.load		# memory load

* What you can get:
    * cpu/memory/load data of engine from "*.load" files
    * Iteration start/end time, iteration duration and rates from ".log" file


===================== How to add new test case ==================

* Refer to test-demo_spec.rb as the example to add your own test cases


===================== How to add new workflow =====================

1. One workflow is one config file; refer to "scripts/workflows/workflow_simple.config"
   to create new workflow
2. To using your new workflow, just specify the workflow config file name in your
   test spec file
